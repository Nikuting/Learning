#!/usr/bin/env python3
# -*- coding: utf-8 -*-

'''
根据用户输入的登录名和口令模拟用户注册，计算更安全的MD5
然后，根据修改后的MD5算法实现用户登录的验证
'''

__author__ = 'Daxia'

import  hashlib, random

def register():
    #模拟用户注册
    username = input('Please Input Your Username:')
    #此处设置一个loop以防用户名重复
    while username in db.keys():
        print('The user name already exists, please input another.')
        username = input('Please Input New Username:')
    password = input('Please Input Your Password:')
    #如是新注册用户，则将其放入db中
    try:
        db[username] = User(username, password)
        print('Registered successfully')
    except:
        print('Sorry,Register failed \n Please register repeatly')
        register()

def get_md5(s):
    return hashlib.md5(s.encode('utf-8')).hexdigest()

class User(object):

    def __init__(self, username, password):
        self.username = username
        #list生成器随机生成一个列表并用join()连接起来
        self.salt = ''.join([chr(random.randint(48,122)) for i in range(20)])
        self.password = get_md5(password + self.salt)

db = {
    'michael': User('michael', '123456'),
    'bob': User('bob', 'abc999'),
    'alice': User('alice', 'alice2008')
}

def login(username, password):
    user = db[username]
    return user.password == get_md5(password + user.salt)

# 测试:
assert login('michael', '123456')
assert login('bob', 'abc999')
assert login('alice', 'alice2008')
assert not login('michael', '1234567')
assert not login('bob', '123456')
assert not login('alice', 'Alice2008')
print('ok')

register()
print(db)
